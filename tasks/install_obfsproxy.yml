---

- name: gather state of python virtualenv directory
  stat: path={{ tor_obfsproxy_home }}/{{ tor_obfsproxy_virtenv_version }}
  register: virtenv_dir_st

# BUG: must usewithtor
- name: ensure virtenv tarball downloaded
  get_url: url={{ tor_virtenv_tarball_url }} dest={{ tor_obfsproxy_home }} mode=0440
  when: virtenv_dir_st.stat.exist is not defined

# BUG: must usewithtor
- name: ensure virtenv tarball gpg signature downloaded
  get_url: url={{ tor_virtenv_tarball_url }}.asc dest={{ tor_obfsproxy_home }} mode=0440
  when: virtenv_dir_st.stat.exist is not defined

- name: gpg verify the python virtualenv tarball
  command: gpg --verify {{ tor_virtenv_tarball }}.asc
  register: virtenv_verified

- name: assert that virtualenv tarball is verified
  assert:
    that: "virtenv_verified != failed"

- name: ensure python virtenv tarball extracted
  command: tar xf {{ tor_obfsproxy_home }}/{{ tor_virtenv_tarball }} --directory {{ tor_obfsproxy_home }}
  when: virtenv_dir_st.stat.isdir is not defined

# BUG: must needs ---> usewithtor pip install obfsproxy
- name: ensure obfsproxy is pip installed in our python virtual env
  pip:
    name=obfsproxy
    state=present
    virtualenv={{ tor_obfsproxy_home }}/{{ tor_obfsproxy_virtenv }}
    virtualenv_command={{ tor_obfsproxy_home }}/{{ tor_obfsproxy_virtenv_version }}/virtualenv.py



